# bot/voice/tts.py
import re
import asyncio
import logging
from pathlib import Path
from datetime import datetime
from gtts import gTTS

from bot.core.config import UPLOADS_DIR
from bot.voice.state import clear_audio_request

logger = logging.getLogger(__name__)

_LANG_RU = "ru"
_LANG_EN = "en"

_LATIN_RE = re.compile(r"[A-Za-z]")
_CYRIL_RE = re.compile(r"[–ê-–Ø–∞-—è–Å—ë]")

def pick_lang(text: str) -> str:
    latin = len(_LATIN_RE.findall(text or ""))
    cyril = len(_CYRIL_RE.findall(text or ""))
    return _LANG_EN if latin > cyril else _LANG_RU

def _speak_sync(text: str, out_path: str, lang: str | None = None) -> str:
    if not text:
        text = "–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç."
    lang = lang or pick_lang(text)
    out = Path(out_path)
    out.parent.mkdir(parents=True, exist_ok=True)
    tts = gTTS(text=text, lang=lang)
    tts.save(out.as_posix())
    return out.as_posix()

async def speak(text: str, out_path: str, lang: str | None = None) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç MP3 —Å –æ–∑–≤—É—á–∫–æ–π. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É."""
    try:
        return await asyncio.to_thread(_speak_sync, text, out_path, lang)
    except Exception as e:
        logger.exception("–û—à–∏–±–∫–∞ TTS (gTTS)")
        raise RuntimeError(f"–û—à–∏–±–∫–∞ TTS: {e}") from e

async def synthesize_and_send_voice(update, text: str):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞—É–¥–∏–æ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram, —Å —É—á—ë—Ç–æ–º –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–≥–æ —Ñ–ª–∞–≥–∞."""
    try:
        user_id = update.effective_user.id
        ts = datetime.now().strftime("%Y%m%d_%H%M%S")
        user_dir = Path(UPLOADS_DIR) / str(user_id)
        user_dir.mkdir(parents=True, exist_ok=True)
        mp3_path = user_dir / f"{ts}_reply.mp3"

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞—É–¥–∏–æ
        await speak(text, mp3_path.as_posix())

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
        with mp3_path.open("rb") as f:
            await update.message.reply_audio(
                audio=f,
                caption="üîä –ê—É–¥–∏–æ-–æ—Ç–≤–µ—Ç",
                title=f"reply_{ts}.mp3",
            )
    except Exception as e:
        logger.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏/–æ—Ç–ø—Ä–∞–≤–∫–µ –∞—É–¥–∏–æ")
    finally:
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π —Ñ–ª–∞–≥, –µ—Å–ª–∏ –æ–Ω –±—ã–ª
        clear_audio_request(user_id)
