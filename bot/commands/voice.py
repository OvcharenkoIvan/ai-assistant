# bot/commands/voice.py
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from bot.voice.state import set_voice_mode, is_voice_on, request_audio

# ==========================
# –ì–ª–æ–±–∞–ª—å–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º
# ==========================

async def voice_on(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–í–∫–ª—é—á–∏—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    try:
        user_id = update.effective_user.id
        set_voice_mode(user_id, True)
        await update.message.reply_text("üîä –ì–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º –≤–∫–ª—é—á—ë–Ω. –¢–µ–ø–µ—Ä—å –æ—Ç–≤–µ—Ç—ã –±—É–¥—É—Ç –∏ –≤ –∞—É–¥–∏–æ.")
        logging.info(f"User {user_id} –≤–∫–ª—é—á–∏–ª –≥–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º.")
    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞")
        await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")

async def voice_off(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–í—ã–∫–ª—é—á–∏—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    try:
        user_id = update.effective_user.id
        set_voice_mode(user_id, False)
        await update.message.reply_text("üîá –ì–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º –≤—ã–∫–ª—é—á–µ–Ω. –û—Ç–ø—Ä–∞–≤–ª—è—é —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç.")
        logging.info(f"User {user_id} –≤—ã–∫–ª—é—á–∏–ª –≥–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º.")
    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞")
        await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")

async def voice_status(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞."""
    try:
        user_id = update.effective_user.id
        status = "–≤–∫–ª—é—á—ë–Ω" if is_voice_on(user_id) else "–≤—ã–∫–ª—é—á–µ–Ω"
        await update.message.reply_text(f"‚ÑπÔ∏è –ì–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º —Å–µ–π—á–∞—Å {status}.")
        logging.info(f"User {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Ç–∞—Ç—É—Å –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞: {status}")
    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞")
        await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")

# ==========================
# –ï–¥–∏–Ω–∏—á–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π –æ—Ç–≤–µ—Ç
# ==========================

async def answer_voice(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –≥–æ–ª–æ—Å –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ (–∞–Ω–≥–ª.)."""
    try:
        user_id = update.effective_user.id
        request_audio(user_id)
        await update.message.reply_text("üîä –°–ª–µ–¥—É—é—â–∏–π –æ—Ç–≤–µ—Ç —è –æ—Ç–ø—Ä–∞–≤–ª—é –≤ –≥–æ–ª–æ—Å–µ!")
        logging.info(f"User {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª –µ–¥–∏–Ω–∏—á–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π –æ—Ç–≤–µ—Ç (–∞–Ω–≥–ª.)")
    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –µ–¥–∏–Ω–∏—á–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞")
        await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")

async def –æ—Ç–≤–µ—Ç—å_–∞—É–¥–∏–æ(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –≥–æ–ª–æ—Å –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ (—Ä—É—Å.)."""
    try:
        user_id = update.effective_user.id
        request_audio(user_id)
        await update.message.reply_text("üîä –°–ª–µ–¥—É—é—â–∏–π –æ—Ç–≤–µ—Ç —è –æ—Ç–ø—Ä–∞–≤–ª—é –≤ –≥–æ–ª–æ—Å–µ!")
        logging.info(f"User {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª –µ–¥–∏–Ω–∏—á–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π –æ—Ç–≤–µ—Ç (—Ä—É—Å.)")
    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –µ–¥–∏–Ω–∏—á–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞")
        await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")

# ==========================
# Inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–º
# ==========================

async def voice_inline(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤—ã–º —Ä–µ–∂–∏–º–æ–º."""
    try:
        keyboard = [
            [
                InlineKeyboardButton("üîä –í–∫–ª—é—á–∏—Ç—å –≥–æ–ª–æ—Å", callback_data="voice_on"),
                InlineKeyboardButton("üîá –í—ã–∫–ª—é—á–∏—Ç—å –≥–æ–ª–æ—Å", callback_data="voice_off")
            ],
            [
                InlineKeyboardButton("üîî –°–ª–µ–¥—É—é—â–∏–π –æ—Ç–≤–µ—Ç –≤ –≥–æ–ª–æ—Å–µ", callback_data="next_voice")
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)
    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ inline-–∫–Ω–æ–ø–æ–∫")
        await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")

async def voice_button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è inline-–∫–Ω–æ–ø–æ–∫ —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ –∑–∞—â–∏—Ç–æ–π."""
    try:
        query = update.callback_query
        user_id = query.from_user.id
        await query.answer()  # –∑–∞–∫—Ä—ã–≤–∞–µ—Ç "—á–∞—Å–∏–∫–∏" —É –∫–Ω–æ–ø–∫–∏

        if query.data == "voice_on":
            set_voice_mode(user_id, True)
            logging.info(f"User {user_id} –≤–∫–ª—é—á–∏–ª –≥–æ–ª–æ—Å —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É")
            await query.edit_message_text("üîä –ì–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º –≤–∫–ª—é—á—ë–Ω. –¢–µ–ø–µ—Ä—å –æ—Ç–≤–µ—Ç—ã –±—É–¥—É—Ç –∏ –≤ –∞—É–¥–∏–æ.")
        elif query.data == "voice_off":
            set_voice_mode(user_id, False)
            logging.info(f"User {user_id} –≤—ã–∫–ª—é—á–∏–ª –≥–æ–ª–æ—Å —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É")
            await query.edit_message_text("üîá –ì–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º –≤—ã–∫–ª—é—á–µ–Ω. –û—Ç–ø—Ä–∞–≤–ª—è—é —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç.")
        elif query.data == "next_voice":
            request_audio(user_id)
            logging.info(f"User {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª –µ–¥–∏–Ω–∏—á–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π –æ—Ç–≤–µ—Ç —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É")
            await query.edit_message_text("üîä –°–ª–µ–¥—É—é—â–∏–π –æ—Ç–≤–µ—Ç —è –æ—Ç–ø—Ä–∞–≤–ª—é –≤ –≥–æ–ª–æ—Å–µ!")
    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ inline-–∫–Ω–æ–ø–∫–∏")
        if update.callback_query:
            await update.callback_query.edit_message_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")
