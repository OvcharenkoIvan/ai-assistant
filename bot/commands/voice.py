# bot/commands/voice.py
import logging
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ContextTypes
from bot.voice.state import set_voice_mode, is_voice_on, request_audio
# from telegram import InlineKeyboardButton, InlineKeyboardMarkup  # –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ, –ø–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º inline

# ==========================
# –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞
# ==========================
voice_keyboard = ReplyKeyboardMarkup(
    [
        [KeyboardButton("üîä –í–∫–ª—é—á–∏—Ç—å –≥–æ–ª–æ—Å"), KeyboardButton("üîá –í—ã–∫–ª—é—á–∏—Ç—å –≥–æ–ª–æ—Å")],
        # [KeyboardButton("üîî –°–ª–µ–¥—É—é—â–∏–π –æ—Ç–≤–µ—Ç –≤ –≥–æ–ª–æ—Å–µ")]  # –ú–æ–∂–Ω–æ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    ],
    resize_keyboard=True,
    one_time_keyboard=False
)

# ==========================
# –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏: –í–∫–ª/–í—ã–∫–ª –≥–æ–ª–æ—Å
# ==========================
async def voice_on(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–í–∫–ª—é—á–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º (–¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –±–æ—Ç–∞)."""
    try:
        user_id = update.effective_user.id
        set_voice_mode(user_id, True)
        await update.message.reply_text("üîä –ì–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º –≤–∫–ª—é—á—ë–Ω. –¢–µ–ø–µ—Ä—å –æ—Ç–≤–µ—Ç—ã –±—É–¥—É—Ç –∏ –≤ –∞—É–¥–∏–æ.",
                                        reply_markup=voice_keyboard)
        logging.info(f"User {user_id} –≤–∫–ª—é—á–∏–ª –≥–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º.")
    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞")
        await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")

async def voice_off(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–í—ã–∫–ª—é—á–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º."""
    try:
        user_id = update.effective_user.id
        set_voice_mode(user_id, False)
        await update.message.reply_text("üîá –ì–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º –≤—ã–∫–ª—é—á–µ–Ω. –û—Ç–ø—Ä–∞–≤–ª—è—é —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç.",
                                        reply_markup=voice_keyboard)
        logging.info(f"User {user_id} –≤—ã–∫–ª—é—á–∏–ª –≥–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º.")
    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞")
        await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")

# ==========================
# –°—Ç–∞—Ç—É—Å –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞
# ==========================
async def voice_status(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞."""
    try:
        user_id = update.effective_user.id
        status = "–≤–∫–ª—é—á—ë–Ω" if is_voice_on(user_id) else "–≤—ã–∫–ª—é—á–µ–Ω"
        await update.message.reply_text(f"‚ÑπÔ∏è –ì–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º —Å–µ–π—á–∞—Å {status}.")
        logging.info(f"User {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Ç–∞—Ç—É—Å –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞: {status}")
    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞")
        await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")

# ==========================
# –ï–¥–∏–Ω–∏—á–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π –æ—Ç–≤–µ—Ç (–∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω –ø–æ–∫–∞)
# ==========================
# async def answer_voice(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
#     """–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –≥–æ–ª–æ—Å –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ (–∞–Ω–≥–ª.)."""
#     ...
# async def –æ—Ç–≤–µ—Ç—å_–∞—É–¥–∏–æ(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
#     """–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –≥–æ–ª–æ—Å –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ (—Ä—É—Å.)."""
#     ...

# ==========================
# Inline-–∫–Ω–æ–ø–∫–∏ (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è)
# ==========================
# async def voice_inline(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
#     ...
# async def voice_button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
#     ...

# ==========================
# –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
# ==========================
async def voice_persistent_keyboard(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–º."""
    try:
        await update.message.reply_text("–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞:", reply_markup=voice_keyboard)
    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã")
        await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")
